version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: royal-trading-academy-db
    environment:
      POSTGRES_DB: royal_trading_academy
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - royal-trading-network

  # NestJS Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: royal-trading-academy-api
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: password
      DATABASE_NAME: royal_trading_academy
      JWT_SECRET: dev-jwt-secret-key-change-in-production-12345
      JWT_EXPIRES_IN: 1d
      JWT_REFRESH_SECRET: dev-refresh-secret-key-change-in-production-67890
      JWT_REFRESH_EXPIRES_IN: 7d
      PORT: 3000
      NODE_ENV: production
      CORS_ORIGIN: http://localhost:4200
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    networks:
      - royal-trading-network
    restart: unless-stopped

  # Redis (for future caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: royal-trading-academy-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - royal-trading-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  royal-trading-network:
    driver: bridge